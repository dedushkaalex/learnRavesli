#include <iostream>
#include <typeinfo> //шобы посмотреть какой тип данных у выражени€\переменной

int add(int a, int b)
{
	return a + b;
}

auto delim(double a, double b)
{

	return a / b;
}
int main()
{
	/*
	Ќачина€ с C++11, ключевое слово auto при инициализации переменной может использоватьс€ вместо типа переменной, 
	чтобы сообщить компил€тору, что он должен присвоить тип переменной исход€ из инициализируемого значени€. 
	Ёто называетс€ выводом типа (или Ђавтоматическим определением типа данных компил€торомї).
	*/

	auto x = 5.0;
	std::cout << typeid(x).name() << std::endl; //double

	auto y = 4.0f;
	std::cout << typeid(y).name() << std::endl; //float

	auto z = 4;
	std::cout << typeid(z).name() << std::endl; //int

	//–аботает с возвращаемыми значени€ми функций 
	auto result = add(5, 5);
	std::cout << result << "   " << typeid(result).name() << std::endl;
	//Auto работает только с инициализированными переменными, в противном случае компил€тор не будет знать
	//какой тип данных присвоить переменной
	
	//“акже можно использовать auto чтобы определ€ть тип возвращаемого значени€ функции
	//Ќе используйте так, потому что нет контекста,который бы указывал какое будет возвращаемое значение
	int x;
	std::cout << typeid(delim(5.0, 2.0)).name() << std::endl;


	system("pause");
	return 0;
}