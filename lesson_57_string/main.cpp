/*Поскольку их часто используют в программах, то большинство современных языков программирования имеют встроенный тип данных string.
В языке C++ есть также этот тип, но не как часть основного языка, а как часть Стандартной библиотеки С++.
*/
#include <iostream>
#include <string>
#include <Windows.h>
using std::string;



void infoUser();

int main()
{
	SetConsoleCP(1251); // Ввод с консоли в кодировке 1251
	SetConsoleOutputCP(1251); // Вывод на консоль в кодировке 1251. Нужно только будет изменить шрифт консоли на Lucida Console или Consolas
	//string name{ "Саша ёбана врот верни сотку" };
	//std::cout << name<<std::endl;
	//string text;
	//std::cout << "Введи любую хуйню: " << std::endl;
	//std::cin >> text;
	//std::cout << text<<std::endl;	//оператор извлечения (>>) 
									//возвращает символы из входного потока данных только до первого пробела. 
									//Все остальные символы остаются внутри cin, ожидая следующего извлечения.

	/*
	Чтобы извлечь полную строку из входного потока данных (вместе с пробелами), используйте функцию std::getline(). 
	Она принимает два параметра: первый — std::cin, второй — переменная типа string.
	*/

	/*string descr;
	std::cout << "Привет, лох, расскажи о себе, сколько ты хочешь у нас, в дом ру, зарабатывать?"<<std::endl;
	std::getline(std::cin, descr);
	std::cout << descr << std::endl;*/


	//std::cout << "Pick 1 or 2: ";
	//int choice;
	//std::cin >> choice;
	////Хорошей практикой является удалять из входного потока данных символ новой строки.Это можно сделать следующим образом :
	//std::cin.ignore(32767, '\n'); //удаляем символ новой строки из входного потока данных
	//std::cout << "Now enter your name: ";
	//string myName;
	//std::getline(std::cin, myName);
	///*когда вы вводите числовое значение, поток cin захватывает вместе с вашим числом и символ новой строки. 
	//Поэтому, когда мы ввели 2, cin фактически получил 2\n. Затем он извлек значение 2 в переменную, оставляя 
	//\n (символ новой строки) во входном потоке. Затем, когда std::getline() 
	//извлекает данные для myName, он видит в потоке \n и думает, что мы, должно быть, ввели просто пустую строку! 
	//А это определенно не то, что мы хотим.*/
	//std::cout << "Hello, " << myName << ", you picked " << choice << '\n';
	//std::cout << myName.length()<<std::endl; //узнать длину строки, включая '\n'




	//Тест
	/*
	Напишите программу, которая просит у пользователя ввести его имя, фамилию и возраст.
	В результате, укажите пользователю, сколько лет он прожил на каждую букву из его имени и фамилии 
	(чтобы было проще, учитывайте также пробелы).
	*/
	infoUser();
	system("pause");
	return 0;
}

void infoUser()
{
	std::cout << "Введите полное имя и фамилию: ";
	string fullName;
	std::getline(std::cin, fullName);
	std::cout << "\n";
	std::cout << "Введите ваш возраст: ";
	int age;
	std::cin >> age;
	std::cout << "На каждую букву имени вы прожили " << static_cast<double>(age) / fullName.length() << " лет";

}